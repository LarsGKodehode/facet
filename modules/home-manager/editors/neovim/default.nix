{
  config,
  lib,
  home-manager,
  pkgs,
  ...
}:

{
  options = {
    editors.neovim = {
      enable = lib.mkEnableOption {
        description = "Enable Neovim";
        default = false;
      };
    };
  };

  config = lib.mkIf (config.editors.neovim.enable) {
    home-manager.users.${config.user} = {
      # Plugins
      programs.neovim = {
      enable = true;

        plugins = [
          pkgs.vimPlugins.vim-surround # Keybindings for surround characters
          pkgs.vimPlugins.which-key-nvim # Keybindings cheatsheat
          # Language syntax
          pkgs.vimPlugins.nvim-treesitter.withAllGrammars
        ];

        extraLuaConfig = ''
          -- Generated by home-manager

          vim.wo.number = true -- Show line numbers
          vim.wo.relativenumber = true -- Relative instead of absolute

          vim.o.termguicolors = true -- Use truecolor
          vim.o.list = true -- Reveal white space with dashes
          vim.o.expandtab = true -- Replace tabs with space
          vim.o.shiftwidth = 2 -- Amount to shift with ">" key
          vim.o.softtabstop = 2 -- Amount to shift with <TAB> key
          vim.o.incsearch = true -- Search while typing

          -- For which-key
          vim.o.timeout = true
          vim.o.timeoutlen = 300
        '';
      };

      # Set Neovim as the default editor
      home.sessionVariables = {
        EDITOR = "nvim";
      }; 

      # Set Neovim as the editor for git commits
      programs.git.extraConfig.core.editor = "nvim";

      # Setup shell shortcuts
      programs.fish = {
        shellAliases = {
          vim = "nvim";
        };
        shellAbbrs = {
          v = lib.mkForce "nvim"; # Override any earlier settings
        };
      };
    };
  };
}
